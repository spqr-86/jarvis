"""
–ì—Ä–∞—Ñ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ–±—â–∏—Ö –¥–∏–∞–ª–æ–≥–æ–≤ –¥–ª—è –±–æ—Ç–∞ Jarvis.
–û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –∑–∞–ø—Ä–æ—Å–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –æ—Ç–Ω–æ—Å—è—Ç—Å—è –∫ —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º –æ–±–ª–∞—Å—Ç—è–º.
"""

import logging
from typing import Dict, Any, List, Optional

from langchain_core.messages import HumanMessage, AIMessage, SystemMessage
from jarvis.llm.models import LLMService
from jarvis.utils.helpers import generate_uuid

logger = logging.getLogger(__name__)


class GeneralConversationGraph:
    """
    –ì—Ä–∞—Ñ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ–±—â–∏—Ö –¥–∏–∞–ª–æ–≥–æ–≤, –Ω–µ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å–æ —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏.
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã, –∑–∞–ø—Ä–æ—Å—ã –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, —Å–≤–µ—Ç—Å–∫—É—é –±–µ—Å–µ–¥—É –∏ —Ç.–¥.
    """
    
    def __init__(self, llm_service: LLMService):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥—Ä–∞—Ñ–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ–±—â–∏—Ö –¥–∏–∞–ª–æ–≥–æ–≤.
        
        Args:
            llm_service: –°–µ—Ä–≤–∏—Å LLM –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–æ–≤
        """
        self.llm_service = llm_service
        self.system_message = """
        –¢—ã ‚Äî —Å–µ–º–µ–π–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç Jarvis, –ø–æ–º–æ–≥–∞—é—â–∏–π –≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–æ–π –∂–∏–∑–Ω–∏.
        –û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ, –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ –∏ –¥—Ä—É–∂–µ–ª—é–±–Ω–æ. –ü—Ä–µ–¥–ª–∞–≥–∞–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è, –∫–æ–≥–¥–∞ —ç—Ç–æ —É–º–µ—Å—Ç–Ω–æ.
        
        –¢—ã –º–æ–∂–µ—à—å –ø–æ–º–æ—á—å —Å:
        - –û–±—â–∏–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏ –∏ —Å–≤–µ—Ç—Å–∫–æ–π –±–µ—Å–µ–¥–æ–π
        - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Å–≤–æ–∏—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö
        - –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏ –ø–æ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ —Å–µ–º–µ–π–Ω–æ–≥–æ –±—ã—Ç–∞
        - –°–æ–≤–µ—Ç–∞–º–∏ –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
        
        –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –∫–∞—Å–∞–µ—Ç—Å—è —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π (–∑–∞–¥–∞—á–∏, —Å–ø–∏—Å–∫–∏ –ø–æ–∫—É–ø–æ–∫, –±—é–¥–∂–µ—Ç),
        —Ä–∞—Å—Å–∫–∞–∂–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –∫–∞–∫ –æ–Ω –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã.
        """
    
    async def process_message(
        self,
        user_input: str,
        user_id: str,
        family_id: Optional[str],
        chat_history: List[Dict[str, str]]
    ) -> Dict[str, Any]:
        """
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç.
        
        Args:
            user_input: –¢–µ–∫—Å—Ç –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            family_id: ID —Å–µ–º—å–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∏–ª–∏ None, –µ—Å–ª–∏ –Ω–µ—Ç —Å–µ–º—å–∏)
            chat_history: –ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞
            
        Returns:
            –°–ª–æ–≤–∞—Ä—å —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞
        """
        try:
            # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞ –≤ —Ñ–æ—Ä–º–∞—Ç, –ø–æ–Ω—è—Ç–Ω—ã–π LLM
            messages = []
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            messages.append(SystemMessage(content=self.system_message))
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞ (–¥–æ 5 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π)
            recent_history = chat_history[-5:] if len(chat_history) >= 5 else chat_history
            for msg in recent_history:
                if msg["role"] == "user":
                    messages.append(HumanMessage(content=msg["content"]))
                elif msg["role"] == "assistant":
                    messages.append(AIMessage(content=msg["content"]))
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–∏–π –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            messages.append(HumanMessage(content=user_input))
            
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
            response = await self.llm_service.model.ainvoke(messages)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –Ω—É–∂–Ω–æ –ª–∏ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
            ui_action = None
            
            # –ó–¥–µ—Å—å –º–æ–∂–µ—Ç –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫
            # –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –∑–∞–ø—Ä–æ—Å —Å–æ–¥–µ—Ä–∂–∏—Ç –≤–æ–ø—Ä–æ—Å –æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö –±–æ—Ç–∞
            if any(keyword in user_input.lower() for keyword in ["—á—Ç–æ —Ç—ã —É–º–µ–µ—à—å", "–ø–æ–º–æ—â—å", "—Ñ—É–Ω–∫—Ü–∏–∏", "–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏"]):
                ui_action = {
                    "type": "show_keyboard",
                    "message": "–í–æ—Ç —á—Ç–æ —è –º–æ–≥—É —Å–¥–µ–ª–∞—Ç—å:",
                    "keyboard": [
                        ["üìã –°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫", "üí∞ –ë—é–¥–∂–µ—Ç"],
                        ["üìÖ –ó–∞–¥–∞—á–∏", "üë®‚Äçüë©‚Äçüëß‚Äçüë¶ –°–µ–º—å—è"],
                        ["‚ÑπÔ∏è –ü–æ–º–æ—â—å"]
                    ],
                    "one_time": True
                }
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            result = {
                "response": response.content,
                "domain": "general",
                "intent": "general_conversation",
                "confidence": 1.0,
                "entities": {}
            }
            
            # –î–æ–±–∞–≤–ª—è–µ–º UI-–¥–µ–π—Å—Ç–≤–∏–µ, –µ—Å–ª–∏ –µ—Å—Ç—å
            if ui_action:
                result["ui_action"] = ui_action
            
            return result
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞ –≤ –æ–±—â–µ–º –≥—Ä–∞—Ñ–µ: {str(e)}")
            # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –±–∞–∑–æ–≤—ã–π –æ—Ç–≤–µ—Ç
            return {
                "response": "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ —Å–º–æ–≥ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤–∞—à –∑–∞–ø—Ä–æ—Å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –∏–ª–∏ –∑–∞–¥–∞—Ç—å –¥—Ä—É–≥–æ–π –≤–æ–ø—Ä–æ—Å.",
                "domain": "general",
                "intent": "error",
                "confidence": 1.0,
                "entities": {}
            }